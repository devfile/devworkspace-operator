apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.1
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: devworkspace-controller
    app.kubernetes.io/part-of: devworkspace-operator
  name: devworkspaceoperatorconfigs.controller.devfile.io
spec:
  group: controller.devfile.io
  names:
    kind: DevWorkspaceOperatorConfig
    listKind: DevWorkspaceOperatorConfigList
    plural: devworkspaceoperatorconfigs
    shortNames:
    - dwoc
    singular: devworkspaceoperatorconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DevWorkspaceOperatorConfig is the Schema for the devworkspaceoperatorconfigs
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          config:
            description: OperatorConfiguration defines configuration options for the
              DevWorkspace Operator.
            properties:
              enableExperimentalFeatures:
                description: EnableExperimentalFeatures turns on in-development features
                  of the controller. This option should generally not be enabled,
                  as any capabilites are subject to removal without notice.
                type: boolean
              routing:
                description: Routing defines configuration options related to DevWorkspace
                  networking
                properties:
                  clusterHostSuffix:
                    description: ClusterHostSuffix is the hostname suffix to be used
                      for DevWorkspace endpoints. On OpenShift, the DevWorkspace Operator
                      will attempt to determine the appropriate value automatically.
                      Must be specified on Kubernetes.
                    type: string
                  defaultRoutingClass:
                    description: DefaultRoutingClass specifies the routingClass to
                      be used when a DevWorkspace specifies an empty `.spec.routingClass`.
                      Supported routingClasses can be defined in other controllers.
                      If not specified, the default value of "basic" is used.
                    type: string
                  proxyConfig:
                    description: "ProxyConfig defines the proxy settings that should
                      be used for all DevWorkspaces. These values are propagated to
                      workspace containers as environment variables. \n On OpenShift,
                      the operator automatically reads values from the \"cluster\"
                      proxies.config.openshift.io object and this value only needs
                      to be set to override those defaults. Values for httpProxy and
                      httpsProxy override the cluster configuration directly. Entries
                      for noProxy are merged with the noProxy values in the cluster
                      configuration. \n Changes to the proxy configuration are detected
                      by the DevWorkspace Operator and propagated to DevWorkspaces.
                      However, changing the proxy configuration for the DevWorkspace
                      Operator itself requires restarting the controller deployment."
                    properties:
                      httpProxy:
                        description: HttpProxy is the URL of the proxy for HTTP requests,
                          in the format http://USERNAME:PASSWORD@SERVER:PORT/
                        type: string
                      httpsProxy:
                        description: HttpsProxy is the URL of the proxy for HTTPS
                          requests, in the format http://USERNAME:PASSWORD@SERVER:PORT/
                        type: string
                      noProxy:
                        description: NoProxy is a comma-separated list of hostnames
                          and/or CIDRs for which the proxy should not be used. Ignored
                          when HttpProxy and HttpsProxy are unset
                        type: string
                    type: object
                type: object
              workspace:
                description: Workspace defines configuration options related to how
                  DevWorkspaces are managed
                properties:
                  cleanupOnStop:
                    description: CleanupOnStop governs how the Operator handles stopped
                      DevWorkspaces. If set to true, additional resources associated
                      with a DevWorkspace (e.g. services, deployments, configmaps,
                      etc.) will be removed from the cluster when a DevWorkspace has
                      .spec.started = false. If set to false, resources will be scaled
                      down (e.g. deployments but the objects will be left on the cluster).
                      The default value is false.
                    type: boolean
                  idleTimeout:
                    description: IdleTimeout determines how long a workspace should
                      sit idle before being automatically scaled down. Proper functionality
                      of this configuration property requires support in the workspace
                      being started. If not specified, the default value of "15m"
                      is used.
                    type: string
                  ignoredUnrecoverableEvents:
                    description: IgnoredUnrecoverableEvents defines a list of Kubernetes
                      event names that should be ignored when deciding to fail a DevWorkspace
                      startup. This option should be used if a transient cluster issue
                      is triggering false-positives (for example, if the cluster occasionally
                      encounters FailedScheduling events). Events listed here will
                      not trigger DevWorkspace failures.
                    items:
                      type: string
                    type: array
                  imagePullPolicy:
                    description: ImagePullPolicy defines the imagePullPolicy used
                      for containers in a DevWorkspace For additional information,
                      see Kubernetes documentation for imagePullPolicy. If not specified,
                      the default value of "Always" is used.
                    enum:
                    - IfNotPresent
                    - Always
                    - Never
                    type: string
                  podSecurityContext:
                    description: PodSecurityContext overrides the default PodSecurityContext
                      used for all workspace-related pods created by the DevWorkspace
                      Operator when running on Kubernetes. On OpenShift, this configuration
                      option is ignored. If set, the entire pod security context is
                      overridden; values are not merged.
                    properties:
                      fsGroup:
                        description: "A special supplemental group that applies to
                          all containers in a pod. Some volume types allow the Kubelet
                          to change the ownership of that volume to be owned by the
                          pod: \n 1. The owning GID will be the FSGroup 2. The setgid
                          bit is set (new files created in the volume will be owned
                          by FSGroup) 3. The permission bits are OR'd with rw-rw----
                          \n If unset, the Kubelet will not modify the ownership and
                          permissions of any volume."
                        format: int64
                        type: integer
                      fsGroupChangePolicy:
                        description: 'fsGroupChangePolicy defines behavior of changing
                          ownership and permission of the volume before being exposed
                          inside Pod. This field will only apply to volume types which
                          support fsGroup based ownership(and permissions). It will
                          have no effect on ephemeral volume types such as: secret,
                          configmaps and emptydir. Valid values are "OnRootMismatch"
                          and "Always". If not specified, "Always" is used.'
                        type: string
                      runAsGroup:
                        description: The GID to run the entrypoint of the container
                          process. Uses runtime default if unset. May also be set
                          in SecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext
                          takes precedence for that container.
                        format: int64
                        type: integer
                      runAsNonRoot:
                        description: Indicates that the container must run as a non-root
                          user. If true, the Kubelet will validate the image at runtime
                          to ensure that it does not run as UID 0 (root) and fail
                          to start the container if it does. If unset or false, no
                          such validation will be performed. May also be set in SecurityContext.  If
                          set in both SecurityContext and PodSecurityContext, the
                          value specified in SecurityContext takes precedence.
                        type: boolean
                      runAsUser:
                        description: The UID to run the entrypoint of the container
                          process. Defaults to user specified in image metadata if
                          unspecified. May also be set in SecurityContext.  If set
                          in both SecurityContext and PodSecurityContext, the value
                          specified in SecurityContext takes precedence for that container.
                        format: int64
                        type: integer
                      seLinuxOptions:
                        description: The SELinux context to be applied to all containers.
                          If unspecified, the container runtime will allocate a random
                          SELinux context for each container.  May also be set in
                          SecurityContext.  If set in both SecurityContext and PodSecurityContext,
                          the value specified in SecurityContext takes precedence
                          for that container.
                        properties:
                          level:
                            description: Level is SELinux level label that applies
                              to the container.
                            type: string
                          role:
                            description: Role is a SELinux role label that applies
                              to the container.
                            type: string
                          type:
                            description: Type is a SELinux type label that applies
                              to the container.
                            type: string
                          user:
                            description: User is a SELinux user label that applies
                              to the container.
                            type: string
                        type: object
                      seccompProfile:
                        description: The seccomp options to use by the containers
                          in this pod.
                        properties:
                          localhostProfile:
                            description: localhostProfile indicates a profile defined
                              in a file on the node should be used. The profile must
                              be preconfigured on the node to work. Must be a descending
                              path, relative to the kubelet's configured seccomp profile
                              location. Must only be set if type is "Localhost".
                            type: string
                          type:
                            description: "type indicates which kind of seccomp profile
                              will be applied. Valid options are: \n Localhost - a
                              profile defined in a file on the node should be used.
                              RuntimeDefault - the container runtime default profile
                              should be used. Unconfined - no profile should be applied."
                            type: string
                        required:
                        - type
                        type: object
                      supplementalGroups:
                        description: A list of groups applied to the first process
                          run in each container, in addition to the container's primary
                          GID.  If unspecified, no groups will be added to any container.
                        items:
                          format: int64
                          type: integer
                        type: array
                      sysctls:
                        description: Sysctls hold a list of namespaced sysctls used
                          for the pod. Pods with unsupported sysctls (by the container
                          runtime) might fail to launch.
                        items:
                          description: Sysctl defines a kernel parameter to be set
                          properties:
                            name:
                              description: Name of a property to set
                              type: string
                            value:
                              description: Value of a property to set
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      windowsOptions:
                        description: The Windows specific settings applied to all
                          containers. If unspecified, the options within a container's
                          SecurityContext will be used. If set in both SecurityContext
                          and PodSecurityContext, the value specified in SecurityContext
                          takes precedence.
                        properties:
                          gmsaCredentialSpec:
                            description: GMSACredentialSpec is where the GMSA admission
                              webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                              inlines the contents of the GMSA credential spec named
                              by the GMSACredentialSpecName field.
                            type: string
                          gmsaCredentialSpecName:
                            description: GMSACredentialSpecName is the name of the
                              GMSA credential spec to use.
                            type: string
                          runAsUserName:
                            description: The UserName in Windows to run the entrypoint
                              of the container process. Defaults to the user specified
                              in image metadata if unspecified. May also be set in
                              PodSecurityContext. If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext
                              takes precedence.
                            type: string
                        type: object
                    type: object
                  progressTimeout:
                    description: ProgressTimeout determines the maximum duration a
                      DevWorkspace can be in a "Starting" or "Failing" phase without
                      progressing before it is automatically failed. Duration should
                      be specified in a format parseable by Go's time package, e.g.
                      "15m", "20s", "1h30m", etc. If not specified, the default value
                      of "5m" is used.
                    type: string
                  pvcName:
                    description: PVCName defines the name used for the persistent
                      volume claim created to support workspace storage when the 'common'
                      storage class is used. If not specified, the default value of
                      `claim-devworkspace` is used.
                    maxLength: 63
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                  storageClassName:
                    description: StorageClassName defines and optional storageClass
                      to use for persistent volume claims created to support DevWorkspaces
                    type: string
                type: object
            type: object
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
